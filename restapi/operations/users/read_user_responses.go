// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/MihaFriskovec/3fs-assignment/models"
)

// ReadUserOKCode is the HTTP code returned for type ReadUserOK
const ReadUserOKCode int = 200

/*ReadUserOK Read a User

swagger:response readUserOK
*/
type ReadUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewReadUserOK creates ReadUserOK with default headers values
func NewReadUserOK() *ReadUserOK {

	return &ReadUserOK{}
}

// WithPayload adds the payload to the read user o k response
func (o *ReadUserOK) WithPayload(payload *models.User) *ReadUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read user o k response
func (o *ReadUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadUserBadRequestCode is the HTTP code returned for type ReadUserBadRequest
const ReadUserBadRequestCode int = 400

/*ReadUserBadRequest User error

swagger:response readUserBadRequest
*/
type ReadUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadUserBadRequest creates ReadUserBadRequest with default headers values
func NewReadUserBadRequest() *ReadUserBadRequest {

	return &ReadUserBadRequest{}
}

// WithPayload adds the payload to the read user bad request response
func (o *ReadUserBadRequest) WithPayload(payload *models.Error) *ReadUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read user bad request response
func (o *ReadUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadUserInternalServerErrorCode is the HTTP code returned for type ReadUserInternalServerError
const ReadUserInternalServerErrorCode int = 500

/*ReadUserInternalServerError Server error

swagger:response readUserInternalServerError
*/
type ReadUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadUserInternalServerError creates ReadUserInternalServerError with default headers values
func NewReadUserInternalServerError() *ReadUserInternalServerError {

	return &ReadUserInternalServerError{}
}

// WithPayload adds the payload to the read user internal server error response
func (o *ReadUserInternalServerError) WithPayload(payload *models.Error) *ReadUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read user internal server error response
func (o *ReadUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReadUserDefault Unknown error

swagger:response readUserDefault
*/
type ReadUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadUserDefault creates ReadUserDefault with default headers values
func NewReadUserDefault(code int) *ReadUserDefault {
	if code <= 0 {
		code = 500
	}

	return &ReadUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the read user default response
func (o *ReadUserDefault) WithStatusCode(code int) *ReadUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the read user default response
func (o *ReadUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the read user default response
func (o *ReadUserDefault) WithPayload(payload *models.Error) *ReadUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read user default response
func (o *ReadUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
