// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/MihaFriskovec/3fs-assignment/models"
)

// ReadGroupOKCode is the HTTP code returned for type ReadGroupOK
const ReadGroupOKCode int = 200

/*ReadGroupOK Read a Group

swagger:response readGroupOK
*/
type ReadGroupOK struct {

	/*
	  In: Body
	*/
	Payload *models.Group `json:"body,omitempty"`
}

// NewReadGroupOK creates ReadGroupOK with default headers values
func NewReadGroupOK() *ReadGroupOK {

	return &ReadGroupOK{}
}

// WithPayload adds the payload to the read group o k response
func (o *ReadGroupOK) WithPayload(payload *models.Group) *ReadGroupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read group o k response
func (o *ReadGroupOK) SetPayload(payload *models.Group) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadGroupBadRequestCode is the HTTP code returned for type ReadGroupBadRequest
const ReadGroupBadRequestCode int = 400

/*ReadGroupBadRequest User error

swagger:response readGroupBadRequest
*/
type ReadGroupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadGroupBadRequest creates ReadGroupBadRequest with default headers values
func NewReadGroupBadRequest() *ReadGroupBadRequest {

	return &ReadGroupBadRequest{}
}

// WithPayload adds the payload to the read group bad request response
func (o *ReadGroupBadRequest) WithPayload(payload *models.Error) *ReadGroupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read group bad request response
func (o *ReadGroupBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadGroupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadGroupInternalServerErrorCode is the HTTP code returned for type ReadGroupInternalServerError
const ReadGroupInternalServerErrorCode int = 500

/*ReadGroupInternalServerError Server error

swagger:response readGroupInternalServerError
*/
type ReadGroupInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadGroupInternalServerError creates ReadGroupInternalServerError with default headers values
func NewReadGroupInternalServerError() *ReadGroupInternalServerError {

	return &ReadGroupInternalServerError{}
}

// WithPayload adds the payload to the read group internal server error response
func (o *ReadGroupInternalServerError) WithPayload(payload *models.Error) *ReadGroupInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read group internal server error response
func (o *ReadGroupInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadGroupInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReadGroupDefault Unknown error

swagger:response readGroupDefault
*/
type ReadGroupDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadGroupDefault creates ReadGroupDefault with default headers values
func NewReadGroupDefault(code int) *ReadGroupDefault {
	if code <= 0 {
		code = 500
	}

	return &ReadGroupDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the read group default response
func (o *ReadGroupDefault) WithStatusCode(code int) *ReadGroupDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the read group default response
func (o *ReadGroupDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the read group default response
func (o *ReadGroupDefault) WithPayload(payload *models.Error) *ReadGroupDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read group default response
func (o *ReadGroupDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadGroupDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
